language: generic
sudo: required
services:
  - docker
env:
  global:
    - SHA=$(git rev-parse HEAD)
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  - gcloud auth activate-service-account --key-file service-account.json
  - gcloud config set project node-k8s-demo
  - gcloud config set compute/zone us-central1-c
  - gcloud container clusters get-credentials k8s-cluster
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker build -t jigglybytez/node-k8s-demo -f ./server/Dockerfile ./server
script:
  - docker run -e CI=true jigglybytez/node-k8s-demo npm run test
after_script:
  - openssl aes-256-cbc -K $encrypted_9f3b5599b056_key -iv $encrypted_9f3b5599b056_iv -in service-account.json.enc -out service-account.json -d
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  - gcloud auth activate-service-account --key-file service-account.json
  - gcloud config set project node-k8s-demo
  - gcloud config set compute/zone us-central1-c
  - gcloud container clusters create --machine-type e2-medium --num-nodes 2 --zone uscentral1-c --cluster-version latest k8s-cluster
  on:
    branch: master
deploy:
  provider: script
  script: bash ./deploy.sh
  on:
    branch: master
